{
  "openapi": "3.0.0",
  "info": {
    "title": "NightPrep API",
    "version": "1.0.0",
    "description": "A comprehensive REST API for the NightPrep evening routine application",
    "contact": {
      "name": "NightPrep API Support",
      "email": "support@nightprep.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    },
    {
      "url": "https://nightprep-bn.onrender.com/api",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-auth-token",
        "description": "JWT token for authentication"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password (hashed)"
          },
          "bedtime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Bedtime in HH:MM format (24-hour)",
            "example": "22:30"
          },
          "reminderTime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Reminder time in HH:MM format (24-hour)",
            "example": "21:00"
          },
          "timerDuration": {
            "type": "number",
            "minimum": 1,
            "maximum": 120,
            "description": "Timer duration in minutes",
            "example": 30
          },
          "checklist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChecklistItem"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "ChecklistItem": {
        "type": "object",
        "required": ["task"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated MongoDB ObjectId"
          },
          "task": {
            "type": "string",
            "description": "Checklist task description",
            "example": "Brush teeth"
          },
          "completed": {
            "type": "boolean",
            "description": "Task completion status",
            "default": false
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid credentials"
          }
        }
      },
      "Settings": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User ID"
          },
          "bedtime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Bedtime in HH:MM format",
            "example": "22:30"
          },
          "reminderTime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Reminder time in HH:MM format",
            "example": "21:00"
          },
          "timerDuration": {
            "type": "number",
            "description": "Timer duration in minutes",
            "example": 30
          }
        }
      },
      "BedtimeResponse": {
        "type": "object",
        "properties": {
          "bedtime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Bedtime in HH:MM format",
            "example": "22:30"
          }
        }
      },
      "ReminderResponse": {
        "type": "object",
        "properties": {
          "reminderTime": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Reminder time in HH:MM format",
            "example": "21:00"
          }
        }
      },
      "TimerResponse": {
        "type": "object",
        "properties": {
          "timerDuration": {
            "type": "number",
            "description": "Timer duration in minutes",
            "example": 30
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication operations"
    },
    {
      "name": "Checklist",
      "description": "Evening checklist management"
    },
    {
      "name": "Settings",
      "description": "User settings and preferences"
    },
    {
      "name": "Bedtime",
      "description": "Bedtime schedule management"
    },
    {
      "name": "Reminder",
      "description": "Evening reminder settings"
    },
    {
      "name": "Timer",
      "description": "Phone-free timer settings"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account with name, email, and password",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "description": "User's password (minimum 6 characters)",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "User already exists or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user and get JWT token",
        "description": "Authenticate user with email and password, returns JWT token",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get current user information",
        "description": "Retrieve the authenticated user's profile information",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string",
                          "description": "Password field is excluded from response",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No token provided or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checklist": {
      "get": {
        "summary": "Get user's checklist",
        "description": "Retrieve all checklist items for the authenticated user",
        "tags": ["Checklist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChecklistItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new checklist item",
        "description": "Create a new task in the user's evening checklist",
        "tags": ["Checklist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["task"],
                "properties": {
                  "task": {
                    "type": "string",
                    "description": "Task description",
                    "example": "Brush teeth"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checklist item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChecklistItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checklist/{id}": {
      "put": {
        "summary": "Update checklist item (toggle completion)",
        "description": "Toggle the completion status of a checklist item",
        "tags": ["Checklist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Checklist item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChecklistItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Checklist item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete checklist item",
        "description": "Remove a checklist item from the user's list",
        "tags": ["Checklist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Checklist item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChecklistItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Checklist item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "summary": "Get user settings",
        "description": "Retrieve all user settings including bedtime, reminder, and timer preferences",
        "tags": ["Settings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user settings",
        "description": "Update user preferences for bedtime, reminder time, and timer duration",
        "tags": ["Settings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bedtime": {
                    "type": "string",
                    "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
                    "description": "Bedtime in HH:MM format",
                    "example": "22:30"
                  },
                  "reminderTime": {
                    "type": "string",
                    "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
                    "description": "Reminder time in HH:MM format",
                    "example": "21:00"
                  },
                  "timerDuration": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 120,
                    "description": "Timer duration in minutes",
                    "example": 30
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bedtime": {
      "get": {
        "summary": "Get user bedtime",
        "description": "Retrieve the user's configured bedtime",
        "tags": ["Bedtime"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bedtime retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BedtimeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set/update bedtime",
        "description": "Set or update the user's bedtime schedule",
        "tags": ["Bedtime"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["bedtime"],
                "properties": {
                  "bedtime": {
                    "type": "string",
                    "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
                    "description": "Bedtime in HH:MM format (24-hour)",
                    "example": "22:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bedtime updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BedtimeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reminder": {
      "get": {
        "summary": "Get reminder time",
        "description": "Retrieve the user's configured reminder time",
        "tags": ["Reminder"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder time retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set/update reminder time",
        "description": "Set or update the user's evening reminder time",
        "tags": ["Reminder"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["reminderTime"],
                "properties": {
                  "reminderTime": {
                    "type": "string",
                    "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
                    "description": "Reminder time in HH:MM format (24-hour)",
                    "example": "21:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reminder time updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/timer-settings": {
      "get": {
        "summary": "Get timer settings",
        "description": "Retrieve the user's phone-free timer duration preference",
        "tags": ["Timer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Timer settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update timer settings",
        "description": "Update the user's preferred phone-free timer duration",
        "tags": ["Timer"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["timerDuration"],
                "properties": {
                  "timerDuration": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 120,
                    "description": "Timer duration in minutes",
                    "example": 45
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Timer settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
